# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*
/.idea
.env

# Ignore Terraform provider binaries
terraform/.terraform/providers/**

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*


# Ignore the Terraform lock file
.terraform.lock.hcl

# Ignore the Terraform directory and its contents
.terraform/

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignoring private keys and sensitive files
**/id_ed25519*
**/id_rsa*
**/id_ecdsa*
**/*.pem
**/*.key
**/*.p12
**/*.crt
**/*.jks