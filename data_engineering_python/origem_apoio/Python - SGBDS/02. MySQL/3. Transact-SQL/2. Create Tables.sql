-- MySQL Script generated by MySQL Workbench
-- Thu Feb  8 21:55:56 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema python
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema python
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `python` DEFAULT CHARACTER SET utf8 ;
USE `python` ;

-- -----------------------------------------------------
-- Table `python`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `python`.`categories` (
  `category_id` INT NOT NULL,
  `category_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `python`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `python`.`products` (
  `product_id` INT NOT NULL,
  `product_name` VARCHAR(150) NOT NULL,
  `brand_id` INT NULL,
  `model_year` INT NULL,
  `list_price` FLOAT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`product_id`),
  INDEX `fk_products_categories_idx` (`category_id` ASC) ,
  CONSTRAINT `fk_products_categories`
    FOREIGN KEY (`category_id`)
    REFERENCES `python`.`categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `python`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `python`.`customers` (
  `customer_id` INT NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `phone` VARCHAR(25) NULL,
  `email` VARCHAR(80) NULL,
  `street` VARCHAR(50) NULL,
  `city` VARCHAR(50) NULL,
  `state` VARCHAR(5) NULL,
  `zip_code` INT NULL,
  `customerscol` VARCHAR(45) NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `python`.`stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `python`.`stores` (
  `store_id` INT NOT NULL,
  `store_name` VARCHAR(45) NULL,
  `phone` VARCHAR(30) NULL,
  `email` VARCHAR(45) NULL,
  `street` VARCHAR(45) NULL,
  `city` VARCHAR(20) NULL,
  `state` VARCHAR(5) NULL,
  `zip_code` INT NULL,
  PRIMARY KEY (`store_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `python`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `python`.`orders` (
  `order_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `order_status` INT NULL,
  `order_date` DATE NULL,
  `required_date` DATE NULL,
  `shipped_date` DATE NULL,
  `staff_id` INT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_orders_customers1_idx` (`customer_id` ASC) ,
  INDEX `fk_orders_stores1_idx` (`store_id` ASC) ,
  CONSTRAINT `fk_orders_customers1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `python`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_stores1`
    FOREIGN KEY (`store_id`)
    REFERENCES `python`.`stores` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `python`.`order_items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `python`.`order_items` (
  `item_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  `quantity` INT NULL,
  `list_price` FLOAT NULL,
  `discount` FLOAT NULL,
  PRIMARY KEY (`item_id`, `product_id`, `order_id`),
  INDEX `fk_products_has_orders_orders1_idx` (`order_id` ASC) ,
  INDEX `fk_products_has_orders_products1_idx` (`product_id` ASC) ,
  CONSTRAINT `fk_products_has_orders_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `python`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_orders_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `python`.`orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
